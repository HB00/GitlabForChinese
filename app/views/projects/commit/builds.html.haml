- page_title "构建", "#{@commit.title} (#{@commit.short_id})", "提交"
= render "projects/commits/header_title"
= render "commit_box"
= render "ci_menu"


- if @ci_commit.yaml_errors.present?
  .bs-callout.bs-callout-danger
    %h4 在 .gitlab-ci.yml 中发现错误：
    %ul
      - @ci_commit.yaml_errors.split(",").each do |error|
        %li= error

- unless @ci_commit.ci_yaml_file
  .bs-callout.bs-callout-warning
    此提交里面没有发现 .gitlab-ci.yml 文件

.gray-content-block.second-block
  最后构建

  .pull-right
    - if @ci_commit.duration > 0
      %i.fa.fa-time
      #{time_interval_in_words @ci_commit.duration}

    &nbsp;

    - if @ci_project && current_user && can?(current_user, :manage_builds, @project)
      - if @ci_commit.builds.latest.failed.any?(&:retryable?)
        = link_to "失败重试", retry_builds_namespace_project_commit_path(@project.namespace, @project, @commit.sha), class: 'btn btn-xs btn-primary', method: :post

      - if @ci_commit.builds.running_or_pending.any?
        = link_to "取消运行", cancel_builds_namespace_project_commit_path(@project.namespace, @project, @commit.sha), class: 'btn btn-xs btn-danger', method: :post

.table-holder
  %table.table.builds
    %thead
      %tr
        %th 状态
        %th 构建 ID
        %th 参考
        %th 阶段
        %th 名称
        %th 运行时间
        %th 结束时间
        - if @ci_project && @ci_project.coverage_enabled?
          %th 覆盖率
        %th
    - @ci_commit.refs.each do |ref|
      = render partial: "projects/commit_statuses/commit_status", collection: @ci_commit.statuses.for_ref(ref).latest.ordered,
               locals: { coverage: @ci_project.try(:coverage_enabled?), stage: true, allow_retry: true }

- if @ci_commit.retried.any?
  .gray-content-block.second-block
    重试的构建

  .table-holder
    %table.table.builds
      %thead
        %tr
          %th 状态
          %th 构建 ID
          %th 参考
          %th 阶段
          %th 名称
          %th 运行时间
          %th 结束时间
          - if @ci_project && @ci_project.coverage_enabled?
            %th 覆盖率
          %th
      = render partial: "projects/commit_statuses/commit_status", collection: @ci_commit.retried,
               locals: { coverage: @ci_project.try(:coverage_enabled?), stage: true }
